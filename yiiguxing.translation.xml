<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="443" />
    <option name="newTranslationDialogWidth" value="814" />
    <option name="newTranslationDialogX" value="367" />
    <option name="newTranslationDialogY" value="457" />
    <histories>
      <item value="デフォルト" />
      <item value="でふぉ" />
      <item value="で" />
      <item value="パドル" />
      <item value="ぱと" />
      <item value="increase" />
      <item value="increase score" />
      <item value="端っこ" />
      <item value="はじ" />
      <item value="かけ算" />
      <item value="かけさ" />
      <item value="引き算" />
      <item value="ひき" />
      <item value="ひ" />
      <item value="かけざん" />
      <item value="This code will not work in repl.it as there is no access to the colorgram package here. We talk about this in the video tutorials" />
      <item value="方向" />
      <item value="times" />
      <item value="Return or set the turtle's speed. Optional argument: speed – an integer in the range 0..10 or a speedstring (see below) Set the turtle's speed to an integer value in the range 0 .. 10. If no argument is given: return current speed. If input is a number greater than 10 or smaller than 0.5, speed is set to 0. Speedstrings are mapped to speedvalues in the following way: 'fastest' : 0 'fast' : 10 'normal' : 6 'slow' : 3 'slowest' : 1 speeds from 1 to 10 enforce increasingly faster animation of line drawing and turtle turning. Attention: speed = 0 : no animation takes place. forwardback makes turtle jump and likewise leftright make the turtle turn instantly. Example (for a Turtle instance named turtle): &gt;&gt;&gt; turtle.speed(3)" />
      <item value="speed" />
      <item value="角度" />
      <item value="角" />
      <item value="各" />
      <item value="四角&#9;" />
      <item value="四角" />
      <item value="rectangular" />
      <item value="still" />
      <item value="loudest" />
      <item value="A slug's blood is green." />
      <item value="from" />
      <item value="is resource sufficient" />
      <item value="勝負" />
      <item value="Which year do you want to check?" />
      <item value="mutate" />
      <item value="割り算" />
      <item value="わりざ" />
      <item value="leap" />
      <item value="le" />
      <item value="lep" />
      <item value="amount" />
      <item value="bid amount" />
      <item value="bids" />
      <item value="HINT: You can call clear() to clear the output in the console." />
      <item value="TODO: Write the function that will allow new countries to be added to the travel_log. " />
      <item value="TODO-2: Call the caesar() function, passing over the 'text', 'shift' and 'direction' values." />
      <item value="TODO-3: Check if the user wanted to encrypt or decrypt the message by checking the 'direction' variable. Then call the correct function based on that 'drection' variable. You should be able to test the code to encrypt AND decrypt a message." />
      <item value="TODO-1: Create a different function called 'decrypt' that takes the 'text' and 'shift' as inputs." />
      <item value="letter" />
      <item value="todo-2: inside the 'encrypt' function, shift each letter of the 'text' forwards in the alphabet by the shift amount and print the encrypted text." />
      <item value="TODO-3: Call the encrypt function and pass in the user inputs. You should be able to test the code and encrypt a message." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="ENGLISH" value="64" />
        <entry key="JAPANESE" value="63" />
        <entry key="SLOVAK" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1658261640024" />
  </component>
</application>